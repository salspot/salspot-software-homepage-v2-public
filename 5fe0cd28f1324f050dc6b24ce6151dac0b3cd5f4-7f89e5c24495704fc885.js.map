{"version":3,"file":"5fe0cd28f1324f050dc6b24ce6151dac0b3cd5f4-7f89e5c24495704fc885.js","mappings":"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","sources":["webpack://new-salspot-software/../src/image-utils.ts","webpack://new-salspot-software/../src/components/hooks.ts","webpack://new-salspot-software/../src/components/layout-wrapper.tsx","webpack://new-salspot-software/../src/components/picture.tsx","webpack://new-salspot-software/../src/components/placeholder.tsx","webpack://new-salspot-software/../src/components/main-image.tsx","webpack://new-salspot-software/../src/components/gatsby-image.server.tsx","webpack://new-salspot-software/../src/components/gatsby-image.browser.tsx","webpack://new-salspot-software/../src/components/static-image.server.tsx","webpack://new-salspot-software/../src/components/static-image.tsx","webpack://new-salspot-software/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://new-salspot-software/./src/components/SecondaryPageHeader.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from 'react'\nimport {GatsbyImage} from \"gatsby-plugin-image\";\n\nconst SecondaryPageHeader = ({\n                               classNames,\n                               headlineClassNames,\n                               smallTitle,\n                               title,\n                               subtext,\n                               textButton,\n                               backgroundImageFlag,\n                               imageFromContent\n                             }) => {\n  return (\n    <header className={'header ' + `${classNames ? classNames : ''}`}>\n      <div className=\"container-fluid\">\n        <div className=\"row headline\">\n          <div className={`${headlineClassNames ? headlineClassNames : \"col-7 row\"}`}>\n            <div className=\"title\">{smallTitle}</div>\n            <h1 className=\"page-type\">{title}</h1>\n            <div className=\"skayline\"></div>\n            {subtext && <div className=\"page-blurb\">{subtext}</div>}\n          </div>\n        </div>\n      </div>\n      {backgroundImageFlag && <>\n        <div className=\"bg-overlay\"></div>\n        {imageFromContent ? <GatsbyImage className=\"hero-image\" image={imageFromContent}/> :\n          <img className=\"hero-image\"></img>}\n      </>}\n    </header>\n  )\n}\n\n\nexport default SecondaryPageHeader\n"],"names":["g","p","m","f","e","console","warn","w","message","t","y","map","src","width","join","b","lastIndexOf","a","slice","length","v","layout","height","i","sourceMetadata","r","breakpoints","n","aspectRatio","s","formats","o","toLowerCase","l","u","Math","round","E","generateImageSource","filename","format","fit","options","M","pluginName","d","reporter","h","backgroundColor","c","placeholderURL","Error","Set","size","has","delete","add","Object","entries","filter","_ref","_ref2","outputPixelDensities","k","$","sizes","presentationWidth","presentationHeight","unscaledWidth","S","I","sources","x","forEach","Boolean","find","fallback","srcSet","push","type","N","images","placeholder","Array","from","concat","_toConsumableArray","sort","_ref3","min","includes","Number","MAX_SAFE_INTEGER","max","HTMLImageElement","prototype","L","GATSBY___IMAGE","W","gatsbyImageData","gatsbyImage","childImageSharp","T","R","_","baseUrl","urlBuilder","sourceWidth","sourceHeight","j","left","position","top","transform","transition","willChange","loading","shouldLoad","style","opacity","O","bottom","right","objectFit","objectPosition","C","_r$images$sources2","_n$sources","_ref4","_r$images$sources","media","image","process","env","NODE_ENV","apply","z","D","_ref5","createElement","paddingTop","maxWidth","display","alt","role","A","children","q","P","H","decoding","G","_ref6","key","V","propTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","B","F","U","MainImage","Fragment","Y","_len","arguments","_key","X","object","J","Z","K","Q","ee","te","as","className","class","onStartLoad","onLoad","onError","overflow","verticalAlign","JSON","stringify","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","ie","re","_len2","_key2","number","ne","se","oe","__imageData","__error","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","toUpperCase","camelCase","input","isArray","TypeError","assign","pascalCase","postProcess","charAt","trim","hasUpperCase","replace","p1","module","exports","default","React","GatsbyImage","SecondaryPageHeader","classNames","headlineClassNames","smallTitle","title","subtext","textButton","backgroundImageFlag","imageFromContent"],"sourceRoot":""}